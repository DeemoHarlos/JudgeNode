<script type="text/javascript" src="/javascripts/marked.js"></script>
<script type="text/javascript" src="/javascripts/MathJax/MathJax.js?config=TeX-AMS-MML_HTMLorMML"></script>
<script src="/javascripts/sh/scripts/shCore.js" type="text/javascript"></script>
<script src="/javascripts/sh/scripts/shAutoloader.js" type="text/javascript"></script>
<script src="/javascripts/sh/scripts/shBrushPlain.js" type="text/javascript"></script>
<script src="/javascripts/sh/scripts/shBrushCpp.js" type="text/javascript"></script>
<link rel="stylesheet" type="text/css" href="/stylesheets/shThemeDefault.css">

<script src="/javascripts/me/js/medium-editor.js" type="text/javascript"></script>
<script src="/javascripts/me/js/me-markdown.standalone.js" type="text/javascript"></script>
<link rel="stylesheet" type="text/css" href="/javascripts/me/css/medium-editor.css">
<link rel="stylesheet" type="text/css" href="/javascripts/me/css/default.css">

<div class="header">
	<h1 class='article-title'><%= __('Edit Announcement') %></h1>
    <h2>Administrator</h2>
</div>


<div class="content">
	<%- include('../_partial/widget/nav')%>
<div class="tab_container">
    <input id="tab1" type="radio" name="tabs" checked>
    <label for="tab1"><i class="fa fa-code"></i><span> Markdown</span></label>

    <input id="tab2" type="radio" name="tabs">
    <label for="tab2"><i class="fa fa-pencil-square-o"></i><span> Preview</span></label>

    <section id="content1" class="tab-content">
        <div class="pure-u-1-1">
            <form action="update/announcement" method="post" class="pure-form  pure-form-stacked">
                <fieldset>

                    <textarea name="textbox" id="textbox" class="pure-input-1 markdown" style="font-family: Courier, Courier New, Microsoft JhengHei, MingLiU; min-height: 800px;"><%= md_content %></textarea>

                    <div class="pure-controls">
                        <button type="submit" name="submit" id="submit" class="pure-button pure-button-primary"><%= __('Update') %></button>
                    </div>
                </fieldset>
            </form>
        </div>
    </section>
    <section id="content2" class="tab-content">
        <div class="pure-u-1-1 content editor" id="preview-textbox" style="border-color: #f0f0f0; border-style: solid;">
        </div>
    </section>
    <!--content goes here-->
</div> 
</div>
<script>
function latex_filter(text) {
    var out = text.replace(/(\${1,2})((?:\\.|[^$])*)\1/g, function(m) {
        m = m.replace(/_/g, '\\_')
             .replace(/</g, '\\lt ')
             .replace(/\|/g, '\\vert ')
             .replace(/\[/g, '\\lbrack ')
             .replace(/\\{/g, '\\lbrace ')
             .replace(/\\}/g, '\\rbrace ')
             .replace(/\\\\/g, '\\\\\\\\');
        return m;
    });
    return out;
};
function after_footer() {
    var math = document.getElementById("preview-textbox");
    MathJax.Hub.Queue(["Typeset",MathJax.Hub,math]);
    SyntaxHighlighter.highlight(math);

};
function render() {
    var renderer = new marked.Renderer();

    renderer.code = function (code, language) {
        if (!language)  language = 'plain';
        return '<pre class="brush: ' + language + ';">' + code + '</pre>';
    };
    var html = $("#textbox").val();
    html = latex_filter(html);
    $("#preview-textbox").html(marked(html, { renderer: renderer })).promise().done(function() {
        after_footer();
    }); 
};
$(document).delegate('#textbox', 'keydown', function(e) {
  var keyCode = e.keyCode || e.which;

  if (keyCode == 9) {
    e.preventDefault();
    var start = $(this).get(0).selectionStart;
    var end = $(this).get(0).selectionEnd;

    // set textarea value to: text before caret + tab + text after caret
    $(this).val($(this).val().substring(0, start)
                + "\t"
                + $(this).val().substring(end));

    // put caret at right position again
    $(this).get(0).selectionStart =
    $(this).get(0).selectionEnd = start + 1;
  }
});
$("#tab2").click(function() {
    if ($(this).is(':checked'))
        render();
});
$(document).ready(function() {
    render();
    new MediumEditor(document.querySelector(".editor"), {
        buttons: ['bold', 'italic', 'underline', 'anchor', 'h2', 'h3', 'quote'],
        extensions: {
            markdown: new MeMarkdown(function (md) {
                var markDownEl = document.querySelector(".markdown");
                markDownEl.value = md;
            })
        }
    });
});

var list = document.getElementsByTagName("form");
for (var i = 0; i < list.length; i++) {
    list[i].addEventListener("submit", function(event){
        var answer = confirm("Are you sure ?");
        if (!answer){ event.preventDefault(); }
    });
}

var aElems = document.getElementsByTagName('a');

for (var i = 0; i < aElems.length; i++) {
    aElems[i].onclick = function() {
        var check = confirm("Are you sure you want to leave?");
        if (check == true) {
            return true;
        }
        else {
            return false;
        }
    };
}
</script>
