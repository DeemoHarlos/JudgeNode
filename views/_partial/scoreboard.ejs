<meta http-equiv="refresh" content="30" />

<link rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/morris.js/0.5.1/morris.css">
<script src="//cdnjs.cloudflare.com/ajax/libs/raphael/2.1.0/raphael-min.js"></script>
<script src="//cdnjs.cloudflare.com/ajax/libs/morris.js/0.5.1/morris.min.js"></script>

<div class="header">
	<h1 class='article-title'>Scoreboard</h1>
	<h2> Contest. <%- table_config.cid %></h2>
</div>
<div class="content">
	<div id="bar-progress"></div>
	<table class="pure-table pure-table-bordered" >
		<thead>
			<tr>
				<th style="width: 15%;">Score</th>
				<% var width = 85 / Math.max(table_config.header.length, 1); %>
				<% for (var row = 0; row < table_config.header.length; row++) { %>
					<th style="width:<%- width %>%"><a href="/problem/<%- table_config.cid %>/<%- table_config.header[row].pid %>"><%- table_config.header[row].ttl %></a></th>
				<% } %>
			</tr>
		</thead>
		<tbody>
			<% if (table_config.scorekind == undefined || table_config.scorekind == null || table_config.scorekind.length == 0 || table_config.scorekind[0].max_res != 100) { %>
			<tr class="normal">
				<th>100</th>
				<% for (var col = 0; col < table_config.header.length; col++) { %>
					<td>0</td>
				<% } %>
			</tr>
			<% } %>
			<% 
				var alluser = {};
				var chart_json = '';
				var probuser = {};
				var score_sum = 0;
				for (var i = 0; i < table_config.user.length; i++)
					alluser[table_config.user[i].uid] = 0;
				for (var i = 0; i < table_config.header.length; i++)
					probuser[i] = 0;
			 %>
			<% for (var row = 0; row < table_config.scorekind.length; row++) { %>
			<tr class="normal">
				<td><%- table_config.scorekind[row].max_res %></td>
				<% for (var col = 0; col < table_config.header.length; col++) { %>
				<%
					var counter = 0;
					for (var i = 0; i < table_config.stats.length; i++) {
						counter += table_config.stats[i].pid == table_config.header[col].pid 
								&& table_config.stats[i]['MAX(scr)'] == table_config.scorekind[row].max_res;
						alluser[table_config.stats[i].uid] = 0;
					}
					probuser[col] = probuser[col] + counter;
					score_sum += counter * table_config.scorekind[row].max_res;
					chart_json += '{ score: ' + table_config.scorekind[row].max_res + ', user: ' + counter + '},'
				%>
					<td><%- counter %></td>
				<% } %>
			</tr>
			<% } %>
			<tr class="normal">
				<td>#NoSubmission</td>
				<%
					var alluser_size = 0;
					for (var key in alluser)
						alluser_size++;
				 %>
				<% for (var i = 0; i < table_config.header.length; i++) { %>
					<td><%- alluser_size-probuser[i] %></td>
				<% } %>
			</tr>
			<tr class="normal">
				<td>#User</td>
				<td colspan='<%- table_config.header.length %>'><%- alluser_size %></td>
			</tr>
			<tr class="normal">
				<td>Avg. score</td>
				<td colspan='<%- table_config.header.length %>'><%- (score_sum / alluser_size / table_config.header.length).toFixed(2) %></td>
			</tr>
		</tbody>
	</table>
	<script>
		Morris.Bar({
		  element: 'bar-progress',
		  data: [
		  	<%- chart_json %>
		  ].reverse(),
		  xkey: 'score',
		  ykeys: ['user'],
		  labels: ['#users']
		});
	</script>
	<% if (user["uid"] >= 0 && user["class"] == null) { %>
		<h2>Grade</h2>
		<table id='grade-table' class="pure-table pure-table-bordered" border="1">
			<thead>
				<tr>
					<th data-type="string" data-sortable="true" data-name="User" style="width: 15%;"></th>
					<% var width = 85 / Math.max(table_config.header.length, 1); %>
					<% for (var row = 0; row < table_config.header.length; row++) { %>
						<th data-type="string" data-sortable="true" data-name="P<%- String.fromCharCode(65 + row)  %>"></th>
						<th data-type="int" data-sortable="true" data-name="Score">Score</th>
						<th data-type="int" data-sortable="true" data-name="Subs">Subs</th>
					<% } %>
				</tr>
			</thead>
			<tbody>
				<%
					var alluser = {};
					for (var i = 0; i < table_config.user.length; i++)
						alluser[table_config.user[i].uid] = {};
					for (var i = 0; i < table_config.stats.length; i++)
						alluser[table_config.stats[i].uid] = {};
					for (var i = 0; i < table_config.grade.length; i++) {
						if (alluser[table_config.grade[i].uid] == undefined)
							continue;
						alluser[table_config.grade[i].uid][table_config.grade[i].pid] = table_config.grade[i];
					}
				 %>
				<% for (var row = 0; row < table_config.user.length; row++) { %>
				<tr class="normal">
					<td><a href="/user/<%- table_config.user[row].uid %>"><%- table_config.user[row].lgn %></a></td>
					<% for (var col = 0; col < table_config.header.length; col++) { %>
						<% 
							if (alluser[table_config.user[row].uid][table_config.header[col].pid] != undefined) { 
								var score = alluser[table_config.user[row].uid][table_config.header[col].pid]['MAX(scr)'];
								var times = alluser[table_config.user[row].uid][table_config.header[col].pid]['COUNT(*)'];
						%>
								<%
									var filter = 'cid=' + table_config.cid;
									filter += '&uid=' + table_config.user[row].uid;
								%>
								<% if (score != 100) { %>
									<td><span class="result6">WA </span></td>
								<% } else { %>
									<td><span class="result7">AC </span></td>
								<% } %>
								<td><%- score %></td>
								<td><a href="/submissions?<%- filter %>"><%- times %></a></td>
						<% } else { %>
							<td> NO </td>
							<td> 0 </td>
							<td> 0 </td>
						<% } %>
					<% } %>
				</tr>
				<% } %>
		</table>
		<script>
function sortTable(tag_id, column, type, cmp) {
    var tbl = document.getElementById(tag_id).tBodies[0];
    var store = [];
    for(var i=0, len=tbl.rows.length; i<len; i++){
        var row = tbl.rows[i];
        var sortnr;
        if (type == 'int') {
        	sortnr = parseFloat(row.cells[column].textContent || row.cells[column].innerText);
        	if(!isNaN(sortnr)) store.push([sortnr, row]);
        } else if (type == 'string') {
        	sortnr = row.cells[column].textContent || row.cells[column].innerText;
        	store.push([sortnr, row]);
        }
    }
    if (type == 'int') {
    	if (cmp == 0) {
	    	store.sort(function(x,y) {
	        	return y[0] - x[0];
	    	});
    	} else {
    		store.sort(function(x,y) {
	        	return x[0] - y[0];
	    	});
    	}
    } else if (type == 'string') {
    	if (cmp == 0) {
    		store.sort(function(x,y) {
	        	return y[0] < x[0] ? 1 : -1;
    		});
    	} else {
    		store.sort(function(x,y) {
	        	return y[0] < x[0] ? -1 : 1;
    		});
    	}
    }
    for(var i=0, len=store.length; i<len; i++){
        tbl.appendChild(store[i][1]);
    }
    store = null;
}
sortTable('grade-table', 0, 'string', 0);
$('#grade-table thead tr').find('th').each(function(index, value) {
	var sortable = $(value).attr('data-sortable');
	if (sortable != undefined && sortable == "true") {
		var type = $(value).attr('data-type');
		var name = $(value).attr('data-name');
		$(value).html(name + ' <i class="fa fa-caret-up"></i>');
		$(value).css('cursor', 'pointer');
		$(value).attr('data-sort', '0');
		$(value).click(function() {
			var cmp = $(value).attr('data-sort');
			if (cmp == "1") {
				sortTable('grade-table', index, type, 1);
				$(value).attr('data-sort', "0");
				var name = $(value).attr('data-name');
				$(value).html(name + ' <i class="fa fa-caret-up"></i>');
			} else {
				sortTable('grade-table', index, type, 0);
				$(value).attr('data-sort', "1");
				var name = $(value).attr('data-name');
				$(value).html(name + ' <i class="fa fa-caret-down"></i>');
			}
		});
	}
});
		</script>
	<% } %>
</div>
